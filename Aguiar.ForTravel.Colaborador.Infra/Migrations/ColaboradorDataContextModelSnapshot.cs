// <auto-generated />
using System;
using Aguiar.ForTravel.Colaborador.Infra.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aguiar.ForTravel.Colaborador.Infra.Migrations
{
    [DbContext(typeof(ColaboradorDataContext))]
    partial class ColaboradorDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.3.20181.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Aguiar.ForTravel.Colaborador.Domain.Models.Colaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Apelido")
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("varchar(150)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid?>("FuncaoId")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("FuncaoId");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("Aguiar.ForTravel.Colaborador.Domain.Models.Funcao", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<decimal?>("LimiteOrcamentoViagem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("PermitirAutorizarViagem")
                        .HasColumnType("bit");

                    b.Property<bool>("PermitirCriarViagem")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Funcao");
                });

            modelBuilder.Entity("Aguiar.ForTravel.Colaborador.Domain.Models.TipoPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("EhCartaoCorporativo")
                        .HasColumnType("bit");

                    b.Property<bool>("RequerDadosCartao")
                        .HasColumnType("bit");

                    b.Property<bool>("RequerDadosConta")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoPagamento");
                });

            modelBuilder.Entity("Aguiar.ForTravel.Colaborador.Domain.Models.TiposPagamentoColaborador", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColaboradorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TipoPagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ColaboradorId");

                    b.HasIndex("TipoPagamentoId");

                    b.ToTable("TiposPagamentoColaborador");
                });

            modelBuilder.Entity("Aguiar.ForTravel.Colaborador.Domain.Models.Colaborador", b =>
                {
                    b.HasOne("Aguiar.ForTravel.Colaborador.Domain.Models.Funcao", "Funcao")
                        .WithMany("Colaboradores")
                        .HasForeignKey("FuncaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Aguiar.ForTravel.Colaborador.Domain.Models.DadosConta", "DadosConta", b1 =>
                        {
                            b1.Property<Guid>("ColaboradorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Conta")
                                .HasColumnName("ContaCorrente")
                                .HasColumnType("varchar(50)");

                            b1.Property<string>("Digito")
                                .HasColumnName("DigitoConta")
                                .HasColumnType("varchar(5)");

                            b1.Property<string>("Favorecido")
                                .HasColumnType("varchar(150)");

                            b1.HasKey("ColaboradorId");

                            b1.ToTable("Colaboradores");

                            b1.WithOwner()
                                .HasForeignKey("ColaboradorId");

                            b1.OwnsOne("Aguiar.ForTravel.Colaborador.Domain.Models.Agencia", "Agencia", b2 =>
                                {
                                    b2.Property<Guid>("DadosContaColaboradorId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Codigo")
                                        .HasColumnName("CodigoAgencia")
                                        .HasColumnType("varchar(10)");

                                    b2.Property<string>("Digito")
                                        .HasColumnName("DigitoAgencia")
                                        .HasColumnType("varchar(5)");

                                    b2.Property<string>("Nome")
                                        .HasColumnName("NomeAgencia")
                                        .HasColumnType("varchar(100)");

                                    b2.HasKey("DadosContaColaboradorId");

                                    b2.ToTable("Colaboradores");

                                    b2.WithOwner()
                                        .HasForeignKey("DadosContaColaboradorId");
                                });

                            b1.OwnsOne("Aguiar.ForTravel.Colaborador.Domain.Models.Banco", "Banco", b2 =>
                                {
                                    b2.Property<Guid>("DadosContaColaboradorId")
                                        .HasColumnType("uniqueidentifier");

                                    b2.Property<string>("Codigo")
                                        .HasColumnName("CodigoBanco")
                                        .HasColumnType("varchar(3)");

                                    b2.Property<string>("Nome")
                                        .HasColumnName("NomeBanco")
                                        .HasColumnType("varchar(100)");

                                    b2.HasKey("DadosContaColaboradorId");

                                    b2.ToTable("Colaboradores");

                                    b2.WithOwner()
                                        .HasForeignKey("DadosContaColaboradorId");
                                });
                        });
                });

            modelBuilder.Entity("Aguiar.ForTravel.Colaborador.Domain.Models.TiposPagamentoColaborador", b =>
                {
                    b.HasOne("Aguiar.ForTravel.Colaborador.Domain.Models.Colaborador", "Colaborador")
                        .WithMany("TiposPagamento")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aguiar.ForTravel.Colaborador.Domain.Models.TipoPagamento", "TipoPagamento")
                        .WithMany("TiposPagamentoColaborador")
                        .HasForeignKey("TipoPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
